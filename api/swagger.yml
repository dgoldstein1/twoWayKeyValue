openapi: 3.0.0
info:
  version: '0.1.0'
  title: 'Two Way ID Store'
  description: 'Fast and Portable Value -> Key and Key -> Value lookups for storing string:int IDs'
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/dgoldstein1/twoWayKeyValue/0.1.0

paths:
  /entriesFromKeys:
    post:
      summary: retrieves entries given keys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string

      responses:
        '200':
          description: Keys => Values response
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/KeyValueEntry'

        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /entriesFromValues:
    post:
      summary: retrieves entries given values
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: number

      responses:
        '200':
          description: Keys => Values response
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/KeyValueEntry'

        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /random:
    get:
      summary: returns random entries
      parameters:
        - in: query
          name: n
          schema:
            type: number
          required: false
          description: number of random entries to return, defaults to 1. Note this endpoint has issues when there are small amounts of data.

      responses:
        '200':
          description: Random entries
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/KeyValueEntry'

        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




  /entries:
    post:
      summary: Creates entries if they don't already exist.
      parameters:
        - in: query
          name: muteAlreadyExistsError
          schema:
            type: string
          required: false
          description: Mute the error 'Entry already exists'

      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: array
                items:
                    type: string


      responses:
        '200':
          description: Newly created entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValueEntryResponse'

        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /metrics:
    get:
      summary: Prometheus Metrics.
      responses:
        '200':
          description: Prometheus metrics. For more information see [data model](https://prometheus.io/docs/concepts/data_model/).
        '500':
          description: An error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    KeyValueEntryResponse:
      type: object
      properties:
          entries:
            type: array
            items:
                $ref: '#/components/schemas/KeyValueEntry'
          errors:
            type: array
            items:
              type: string


    KeyValueEntry:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
        value:
          type: number

    Error:
      type: object
      properties:
        code:
          type: integer
          description: The code of the error.
        error:
          type: string
          description: Explanation of the error.
